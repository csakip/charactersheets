body {
  padding: 0;
  margin: 0;
  height: 100vh;
  overflow-y: hidden;
}

* {
  box-sizing: border-box;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type="number"] {
  appearance: textfield;
  -moz-appearance: textfield;
}

.p-disabled,
.p-component:disabled {
  opacity: 1;
}

.charactersheet {
  min-height: calc(100vh - 76px);
}

.charactersheet .p-dropdown-label.p-inputtext {
  color: var(--p-yellow-400);
}

.hidden-nowrap {
  overflow: hidden !important;
  white-space: nowrap;
  max-width: 100% !important;
}

.nowrap {
  white-space: nowrap;
}

/* sidebar */

.sidebar-toggle {
  position: absolute;
  right: -15px;
  top: 20px;
  width: 32px;
  height: 32px;
  z-index: 100;
  padding: 0;
  box-shadow: unset;
}

.sidebar-container {
  width: 23rem;
  transition: width 0.2s ease-in-out;
  overflow: visible !important;

  li {
    white-space: nowrap;
  }
}

.sidebar-closed .sidebar-container {
  width: 8.4rem;

  li {
    padding-left: 0;
    padding-right: 0;
    text-align: center;
  }
}

/* sidebar end */

.thin-scrollbar {
  scrollbar-width: thin;
  scrollbar-color: var(--bluegray-800) transparent;
}

.class-title {
  font-family: "Protest Strike", sans-serif;
  font-weight: 400;
  font-style: normal;
}

.charactersheet textarea {
  line-height: 1.4rem;
  padding-top: 0.4rem;
  padding-bottom: 0.6rem;
}

.charactersheet .p-float-label:has(input:focus) label,
.p-float-label:has(input.p-filled) label,
.p-float-label:has(input:autofill) label,
.p-float-label:has(textarea:focus) label,
.p-float-label:has(textarea.p-filled) label,
.p-float-label:has(.p-inputwrapper-focus) label,
.p-float-label:has(.p-inputwrapper-filled) label {
  top: -0.5rem;
  font-size: 12px;
}

.charactersheet.starwars .p-float-label:has(textarea:not(:focus):not(.p-filled)) label {
  top: 1.3rem;
}

.blades.charactersheet textarea {
  resize: none;
}

.wound-box {
  box-shadow: none;

  &.border-top-transparent {
    border-top-style: none;
  }
}

.wound-box:hover,
.wound-box:focus {
  border-width: 1px !important;
  border-top-style: solid;
}

.arrowButton {
  margin: 0;
  margin-left: 0.3rem;
  padding: 0;
  border: none;
  height: 10px;
  font-size: 0.6rem;
  text-align: center;
  color: var(--surface-400);
}

.arrowButton:hover {
  background-color: var(--surface-200);
  color: var(--surface-600);
}

.arrowButton:active {
  background-color: var(--surface-300);
}

/* Dice display */

.die {
  background-color: #e7e7e7;
  width: 20px;
  height: 20px;
  object-fit: contain;
  border-radius: 15%;
  display: flex;
  align-items: center;
  flex-direction: column;
  /* justify-content: center; */
  color: #000;
  box-shadow: inset 0 2px #fff, inset 0 -2px #d7d7d7, inset 2px 0 #d7d7d7, inset -2px 0 #d7d7d7, 1px 3px 2px 1px #0003;
  font-weight: bold;
}

.toast-body {
  display: flex;
  align-items: center;
  padding: 3px;

  .p-toast-message-content {
    flex: 1;
    display: flex;
    gap: 5px;
  }

  .result {
    text-align: center;
    font-size: 25px;
    min-width: 70px;
    margin-top: 0.5rem;
    color: var(--surface-700);

    .reduced {
      font-size: 0.8rem;
      white-space: nowrap;
      color: #fff;
      font-weight: normal;
    }

    &.red {
      color: var(--red-400);
    }
  }

  .p-toast-message-text {
    margin: 0;
  }
}

.die .face {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
}

.die.wild {
  background-color: #67eb5b;
  box-shadow: inset 0 2px #aff8a8, inset 0 -2px #52bb49, inset 2px 0 #8ee686, inset -2px 0 #52bb49, 1px 3px 2px 1px #0003;
}

.die.fail {
  background-color: #eb5b5b;
  box-shadow: inset 0 2px #f8a8a8, inset 0 -2px #bb4949, inset 2px 0 #e68686, inset -2px 0 #bb4949, 1px 3px 2px 1px #0003;
}

/* End Dice display */

.light-inputs .p-inputtext {
  border: none !important;
  border-bottom: 1px solid var(--surface-200) !important;
  background-color: transparent !important;
  box-shadow: none !important;
  border-radius: 0;
  padding: 3px;
}

.light-inputs .fake-input {
  border-bottom: 1px solid var(--surface-200) !important;
}

.light-inputs .p-disabled {
  opacity: 1;
}

.light-inputs input.viewing {
  border: none !important;
}

.charactersheet.starwars .border-50 {
  border-color: #424b57 !important;
}

.tiptap.ProseMirror ol,
.tiptap.ProseMirror ul {
  padding-left: 1rem;
}

.tiptap.ProseMirror li p {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}

.p-panel-toggleable:not(.open) .p-panel-header {
  border-radius: 0.375rem;
}

.custom-label {
  position: absolute;
  top: -18px;
  font-size: 12px;
  margin-left: 0.75rem;
  left: 0;
  opacity: 0.5;
  pointer-events: none;
  user-select: none;
}
.editor-container {
  .ql-editor {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    p {
      margin-top: 0.5rem;
      margin-bottom: 0.5rem;
    }
  }

  .ql-editor ol {
    padding-left: 0rem !important;

    li[data-list="bullet"] {
      padding-left: 0.75rem;
    }
    li[data-list="ordered"] {
      padding-left: 1.1rem;
    }
  }

  .ql-toolbar {
    position: absolute;
    width: 100%;
    top: -2.5rem;
    left: 0;
    z-index: 1;
    background-color: #111827;
    border: none !important;
    border-radius: 0.375rem;
    display: none;
  }

  .has-selection .ql-toolbar {
    display: block;
  }

  .ql-toolbar + .ql-container {
    border: 1px solid var(--surface-200) !important;
    border-radius: 0.375rem;
  }
  .ql-container {
    font-size: 15px;
  }

  .ql-editor-hover:hover {
    border-color: var(--p-yellow-400) !important;
  }
}

.text-md {
  font-size: 0.9rem;
}

.editor-static {
  line-height: 1.3rem;

  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p {
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
  }

  ol,
  ul {
    margin-top: 0;
    margin-bottom: 0;
    padding-left: 0rem;
    counter-reset: list-0;
    li {
      padding-left: 0;
      list-style: none;
    }
    li[data-list="ordered"] {
      counter-increment: list-0;
    }
    li[data-list="bullet"]::before {
      content: "â€¢";
      font-weight: bold;
      display: inline-block;
      width: 1em;
    }
  }

  li[data-list="ordered"] > .ql-ui::before {
    content: counter(list-0, decimal) ". ";
  }
}

.charactersheet.mosh {
  .skill-container {
    label {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }

  input.transparent {
    border: none !important;
    background-color: transparent !important;
    text-align: center;
    width: 3rem;
  }

  .dark-background {
    background-color: var(--surface-0) !important;
  }
}

.arrow {
  pointer-events: none;
}

.arrow__path {
  stroke: var(--surface-200);
  fill: transparent;
}

.arrow__head {
  stroke: var(--surface-200);
  fill: var(--surface-200);
}
